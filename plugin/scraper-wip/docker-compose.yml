---
version: '3'
services:

  data:
    image: tianon/true
    container_name: scraper-data
    volumes:
    - "$PWD:/app/src"
    - "./shared/data:/data"
    - "./shared/conf.d:/app/conf.d"
    - "./shared/data/deepdetect:/data"
    - "./shared/models:/opt/models"

  scraper:
    container_name: scraper
    build:
      context: .
      dockerfile: "scraper-alpine.dockerfile"
    depends_on:
    - etcd1
    - e3w_dev
    links:
    - etcd1
    - e3w_dev
    ports:
    - 3000:3000
    - 4000:4000
    volumes:
    - "${PWD}:/go/src/github.com/roscopecoltran/scraper" # change it for "$PWD:/app", if you want to share the source code with the container
    - "./shared/cache:/data/cache"
    - "./shared/conf.d:/app/conf.d"
    command: ["/bin/bash"]
    # command: ["/app/scraper-server","/app/conf.d/providers.list.json"]
    # command: ["./entrypoint.sh"]
    # command: ["go", "run", "*.go", "--debug", "/app/conf.d/providers.list.json"]
    # $ go run *.go --debug --verbose ./providers.dev.json

  scraper_dist:
    container_name: scraper
    build:
      context: ./dist/
      dockerfile: "scraper-alpine.dockerfile"
    depends_on:
    - etcd1
    links:
    - etcd1
    ports:
    - 3000:3000
    volumes:
    - "${PWD}:/go/src/github.com/roscopecoltran/scraper" # change it for "$PWD:/app", if you want to share the source code with the container
    - "./shared/cache:/data/cache"
    - "./shared/conf.d:/app/conf.d"
    command: ["/bin/bash"]
    # command: ["/app/scraper-server","/app/conf.d/providers.list.json"]
    # command: ["go", "run", "*.go", "--debug", "/app/conf.d/providers.list.json"]
    # go run cmd/scraper-etcd/main.go --debug /app/conf.d/providers.list.json

  aile:
    container_name: scraphub-aile
    build:
      context: shared/docker/templates/automatic-list
      dockerfile: "aile-alpine.dockerfile"
    ports:
    - 8000:8000
    - 8888:8888
    # network_mode: "host"
    depends_on:
    - etcd1
    links:
    - etcd1
    volumes:
    # - "${PWD}:/app/code" # change it for "$PWD:/app", if you want to share the source code with the container
    - "./shared/data:/data"
    - "./shared/conf.d:/app/conf.d"
    - "./shared/data/annotated:/data/annotated"
    - "./shared/data/projects:/data/projects"
    - "./cmd:/app/cmd"
    #- "/tmp/.X11-unix:/tmp/.X11-unix:ro"
    #- "$XAUTHORITY:/root/.Xauthority"
    #- "/var/run/docker.sock:/var/run/docker.sock"
    command: ["/bin/bash"]

  deepdetect:
    container_name: deepdetect-cpu
    image: beniz/deepdetect_cpu
    # network_mode: "host"
    ports:
    - 8890:8890
    volumes:
    - "./shared/data/deepdetect:/data"
    - "./shared/models:/opt/models"
    command: ["./dede", "-host", "0.0.0.0", "-port", "8890"]

  deepdetect-tf:
    container_name: deepdetect-tf-cpu
    build:
      context: shared/docker/templates/deepdetect/docker/cpu-caffe-tf
      dockerfile: Dockerfile
    # network_mode: "host"
    ports:
    - 8895:8895
    volumes:
    - "./shared/data/deepdetect:/data"
    - "./shared/models:/opt/models"
    command: ["./dede", "-host", "0.0.0.0", "-port", "8895"] 

  elk5:
    container_name: elk-v5.x
    image: cdrocker/elk5:latest
    # network_mode: "host"
    ports:
    - 5601:5601
    - 9200:9200
    - 5044:5044
    volumes:
    - "./shared/data/elasticsearch:/var/lib/elasticsearch"

  etcd_browser:
    container_name: etcd-browser
    image: kiodo/etcd-browser:latest
    # network_mode: "host"
    ports:
    - 8070:8070 
    depends_on:
    - etcd1
    environment:
    - ETCD_HOST=etcd1
    - ETCD_PORT=2379
    - SERVER_PORT=8070
    # - ETCDCTL_CA_FILE
    # - ETCDCTL_CERT_FILE
    # - ETCDCTL_KEY_FILE 
    # - AUTH_PASS=doe
    # - AUTH_USER=
    links:
    - etcd1

  e3w_dev:
    container_name: e3w-dev
    build:
      context: ./shared/docker/templates/e3w
      dockerfile: "e3w.alpine-dockerfile"
    hostname: e3w-dev
    ports:
    - 8086:8086
    - 3002:3002
    - 3003:3003
    volumes:
    - "$PWD/shared/docker/templates/e3w:/go/src/github.com/roscopecoltran/e3w" # change it for "$PWD:/app", if you want to share the source code with the container
    - "$PWD/shared/docker/templates/e3w/shared/dist:/app"
    - "$PWD/shared/docker/templates/e3w/shared/conf.d/e3w:/data/conf.d/e3w"
    environment:
    # - GIN_MODE=release
    - ETCDCTL_API=3
    links:
    - etcd1
    working_dir: /go/src/github.com/roscopecoltran/e3w
    command: ["./entrypoint.sh"]
    # command: ["go", "run", "main.go", "-conf", "/data/conf.d/e3w/config.ini", "-front-dir", "/go/src/github.com/roscopecoltran/e3w/static/dist"]
    # go run main.go -conf /data/conf.d/e3w/config.ini -front-dir /go/src/github.com/roscopecoltran/e3w/static/dist

  etcd1:
    image: quay.io/coreos/etcd:v3.2.4
    hostname: etcd1
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - ./shared/data/etcd/unit_1:/etcd-data
    restart: always
    environment:
      - ETCD_NAME=etcd1
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://192.168.1.200:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_ADVERTISE_CLIENT_URLS=http://192.168.1.200:2379
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_INITIAL_CLUSTER=etcd1=http://192.168.1.200:2380
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_INITIAL_CLUSTER_TOKEN=etcd-cluster-1
      - ETCD_INITIAL_CLUSTER_STATE=new

  nginx:
    image: nginx:1.12-alpine
    volumes:
      - /docker/data/www/service:/var/www/service
      - /docker/data/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - 192.168.1.200:80:80
    dns:
      - "192.168.1.56"
    restart: always

  rabbitmq:
    image: smebberson/alpine-rabbitmq
    container_name: rabbitmq-persistent
    ports:
    - 5672:5672
    - 15672:15672
    volumes:
    - ./shared/logs/rabbitmq:/data/log
    - ./shared/data/rabbitmq:/data/mnesia

  rmq:
    image: gonkulatorlabs/rabbitmq
    container_name: rmq
    ports:
    - 5672:5672
    - 15672:15672
    environment:
    # - AUTOCLUSTER_TYPE=consul
    # - CONSUL_HOST=192.168.99.101
    # - SSL_CERT_FILE=/ssl/cert/cert.pem
    # - SSL_KEY_FILE=/ssl/cert/key.pem
    # - SSL_CA_FILE=/ssl/CA/cacert.pem
    #volumes:
    #- ./shared/certs/cert.pem:/ssl/cert/cert.pem
    #- ./shared/certs/key.pem:/ssl/cert/key.pem
    #- ./shared/certs/CA/cacert.pem:/ssl/CA/cacert.pem

  nsqlookupd:
    image: nsqio/nsq:v1.0.0-compat
    container_name: nsqlookupd
    command: >-
      /nsqlookupd --broadcast-address="localhost"
    ports:
      - '4160-4161:4160-4161'
    restart: always
    networks:
      - nsq
    # command: /nsqlookupd
  
  nsqd:
    image: nsqio/nsq:v1.0.0-compat
    container_name: nsqd
    command: >-
      /nsqd --broadcast-address="localhost"
      --lookupd-tcp-address="nsqlookupd:4160"
    ports:
      - '4150-4151:4150-4151'
    links:
      - 'nsqlookupd:nsqlookupd'
    restart: always
    networks:
      - nsq
    # command: /nsqd --lookupd-tcp-address=nsqlookupd:4160

  nsqadmin:
    image: nsqio/nsq:v1.0.0-compat
    container_name: nsqadmin
    command: >-
      /nsqadmin
      --lookupd-http-address="nsqlookupd:4161"
    ports:
      - '4170-4171:4170-4171'
    links:
      - 'nsqlookupd:nsqlookupd'
      - 'nsqd:nsqd'
    restart: always
    networks:
      - nsq
    # /nsqadmin --lookupd-http-address=nsqlookupd:4161

  # MongoDB
  mongo:
    image: mongo
    container_name: 'mongo'
    restart: always
    ports:
      - "27017:27017"
    networks:
      - mongo
    # command: mongo -d /data/db

  # https://github.com/GulDmitry/golang-api-vue-js/blob/master/docker-compose.yml
  

  rabbit1:
    image: "rabbitmq:3-management"
    hostname: "rabbit1"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq1"
    networks:
      - app-tier

# https://github.com/hugominas/recipe-docker-go-mongo-react/blob/master/docker-compose.yml
networks:
  app-tier:
    driver: bridge
  mongo:
    external:
      name: mongo
  nsq:
    external:
      name: nsq